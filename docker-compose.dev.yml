services:
  mongo:
    image: mongo:latest
    container_name: mongo
    volumes:
      - database:/data/db
    ports:
      - 27018:27017
    networks:
      - movie_network
    restart: always

  redis:
    image: redis:7-alpine
    container_name: redis_server
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: ['redis-server', '--appendonly', 'yes']
    networks:
      - movie_network

  backend:
    container_name: express_backend
    image: express-backend:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    env_file:
      - ./secrets/.env
    environment:
      HOST: localhost
      HOST_BASE_URL: "http://localhost:3333"
      DOCKER_HOST_BASE_URL: "http://express_backend:3333"
      PORT: "3333"
      NODE_ENV: development
      DEBUG: "true"
      APP_NAME: "Clean Movie API"
      DEFAULT_THROTTLE_TTL: "60000" # 60 sec
      DEFAULT_THROTTLE_LIMIT: "250"
      POST_PATCH_THROTTLE_TTL: "30000" # 30 sec
      POST_PATCH_THROTTLE_LIMIT: "20"
      RESPONSE_TIME_HEADER_NAME: "x-response-time"
      REQUEST_ID_HEADER_NAME: "x-request-id"
    command: yarn start:dev
    ports:
      - 3333:3333
    networks:
      - movie_network
    depends_on:
      - mongo
    volumes:
      - ./:/app/
      - backend_node_modules:/app/node_modules
    restart: unless-stopped

networks:
  movie_network:
    driver: bridge

volumes:
  database:
  backend_node_modules:
  redis_data:
